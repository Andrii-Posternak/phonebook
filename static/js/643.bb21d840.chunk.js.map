{"version":3,"file":"static/js/643.bb21d840.chunk.js","mappings":"wRAcaA,EAAW,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC7C,GAAwBC,EAAAA,EAAAA,UACT,UAAbH,EACI,CAAEI,MAAO,GAAIC,SAAU,IACvB,CAAED,MAAO,GAAIC,SAAU,GAAIC,KAAM,KAHvC,eAAOC,EAAP,KAAaC,EAAb,KAMQF,EAA0BC,EAA1BD,KAAMF,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SAEfI,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBL,EAAR,EAAQA,KAAMM,EAAd,EAAcA,MACdJ,GAAQ,SAAAK,GAAI,yBAAUA,GAAV,cAAiBP,EAAOM,GAAxB,GACb,EAQD,OACE,SAAC,IAAD,CAAWE,UAAU,MAAMC,SAAS,KAApC,UACE,UAAC,IAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAAC,IAAD,CAAQJ,GAAI,CAAEK,EAAG,EAAGC,QAAS,WAA7B,UACE,SAAC,IAAD,OAEF,SAAC,IAAD,CAAYR,UAAU,KAAKS,QAAQ,KAAnC,SACGtB,KAEH,UAAC,IAAD,CAAKa,UAAU,OAAOZ,SAtBP,SAAAQ,GACnBA,EAAMc,iBACNtB,EAASK,GACTC,EAAQ,CAAEJ,MAAO,GAAIC,SAAU,GAAIC,KAAM,IAC1C,EAkBmDmB,YAAU,EAACT,GAAI,CAAEU,GAAI,GAAnE,UACgB,aAAb1B,IACC,SAAC,IAAD,CACE2B,OAAO,SACPC,WAAS,EACTC,UAAQ,EACRC,GAAG,OACHC,MAAM,OACNzB,KAAK,OACLM,MAAON,EACP0B,SAAUvB,KAGd,SAAC,IAAD,CACEkB,OAAO,SACPC,WAAS,EACTC,UAAQ,EACRC,GAAG,QACHC,MAAM,gBACNzB,KAAK,QACLM,MAAOR,EACP4B,SAAUvB,KAEZ,SAAC,IAAD,CACEkB,OAAO,SACPC,WAAS,EACTC,UAAQ,EACRI,KAAK,WACLH,GAAG,WACHC,MAAM,WACNzB,KAAK,WACLM,MAAOP,EACP2B,SAAUvB,KAEZ,SAAC,IAAD,CACEwB,KAAK,SACLL,WAAS,EACTL,QAAQ,YACRP,GAAI,CAAEU,GAAI,EAAGQ,GAAI,GAJnB,SAMGjC,KAEH,UAAC,KAAD,CAAMkC,WAAS,EAAf,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,IAAE,KACb,SAAC,KAAD,CAAMD,MAAI,EAAV,SACgB,UAAbnC,GACC,SAAC,IAAD,CAAMqC,KAAK,sBAAsBf,QAAQ,QAAzC,8CAIA,SAAC,IAAD,CAAMe,KAAK,mBAAmBf,QAAQ,QAAtC,wDAUf,C,iHC1GYgB,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,IAAD,CACEzC,SAAU,WACVC,SAAU,WACVC,SARgB,SAAAK,GAClBiC,GAASE,EAAAA,EAAAA,IAAanC,GACvB,GASF,C","sources":["components/AuthForm/AuthForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Button,\n  TextField,\n  Link,\n  Grid,\n  Box,\n  Typography,\n  Container,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nexport const AuthForm = ({ authType, btnTitle, onSubmit }) => {\n  const [form, setForm] = useState(\n    authType === 'login'\n      ? { email: '', password: '' }\n      : { email: '', password: '', name: '' }\n  );\n\n  const { name, email, password } = form;\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setForm(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(form);\n    setForm({ email: '', password: '', name: '' });\n  };\n\n  return (\n    <Container component=\"div\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: '#1976d2' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {btnTitle}\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n          {authType === 'register' && (\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              required\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n            />\n          )}\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            required\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            required\n            type=\"password\"\n            id=\"password\"\n            label=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            {btnTitle}\n          </Button>\n          <Grid container>\n            <Grid item xs></Grid>\n            <Grid item>\n              {btnTitle === 'Login' ? (\n                <Link href=\"/phonebook/register\" variant=\"body2\">\n                  Don't have an account? Register\n                </Link>\n              ) : (\n                <Link href=\"/phonebook/login\" variant=\"body2\">\n                  Already have an account? Login\n                </Link>\n              )}\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nAuthForm.propTypes = {\n  authType: PropTypes.string.isRequired,\n  btnTitle: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useDispatch } from 'react-redux';\nimport { AuthForm } from 'components/AuthForm/AuthForm';\nimport { registerUser } from 'redux/auth/authOperations';\n\nexport const Register = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmt = form => {\n    dispatch(registerUser(form));\n  };\n\n  return (\n    <AuthForm\n      authType={'register'}\n      btnTitle={'Register'}\n      onSubmit={handleSubmt}\n    />\n  );\n};\n"],"names":["AuthForm","authType","btnTitle","onSubmit","useState","email","password","name","form","setForm","handleChange","event","target","value","prev","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","preventDefault","noValidate","mt","margin","fullWidth","required","id","label","onChange","type","mb","container","item","xs","href","Register","dispatch","useDispatch","registerUser"],"sourceRoot":""}